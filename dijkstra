#include <stdio.h>
#include <limits.h>
#define V 6 
void dijkstra(int graph[V][V], int src) {
  int dist[V];
  int visited[V];
  for (int i = 0; i < V; i++) {
    dist[i] = INT_MAX;
    visited[i] = 0;
  }
  dist[src] = 0; 
  for (int i = 0; i < V - 1; i++) {
    int min = INT_MAX, min_index;

    for (int j = 0; j < V; j++) {
      if (visited[j] == 0 && dist[j] < min) {
        min = dist[j];
        min_index = j;
      }
    }
    visited[min_index] = 1;
    for (int j = 0; j < V; j++) {
      if (graph[min_index][j] && visited[j] == 0 && dist[min_index] + graph[min_index][j] < dist[j]) {
        dist[j] = dist[min_index] + graph[min_index][j];
      }
    }
  }
  printf("Vertex \tDistance from Source\n");
  for (int i = 0; i < V; i++) {
    printf("%d \t%d\n", i, dist[i]);
  }
}
int main() {
  int graph[V][V] = {
    {0, 4, 0, 0, 0, 0},
    {4, 0, 8, 0, 0, 0},
    {0, 8, 0, 7, 0, 4},
    {0, 0, 7, 0, 9, 14},
    {0, 0, 0, 9, 0, 10},
    {0, 0, 4, 14, 10, 0}
  };
  dijkstra(graph, 0);
  return 0;
}
